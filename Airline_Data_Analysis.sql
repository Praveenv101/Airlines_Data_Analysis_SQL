USE airlines_data;

-- Question 1 
-- Objective: Determine, for flights that actually departed later than scheduled, what the average departure delay is (in minutes).

SELECT 
  flight_id,
  flight_no,
  TIMESTAMPDIFF(MINUTE, scheduled_departure, actual_departure) AS departure_delay_minutes
FROM flights
WHERE actual_departure IS NOT NULL
  AND actual_departure > scheduled_departure;

-- Question 2 
-- Objective: Show how frequently each aircraft is used by counting the number of flights operated by each aircraft.

SELECT 
  aircraft_code,
  COUNT(*) AS total_flights,
  AVG(TIMESTAMPDIFF(MINUTE, scheduled_departure, scheduled_arrival)) AS avg_flight_duration_minutes
FROM flights
GROUP BY aircraft_code;

-- Question 3 
-- Objective: Aggregate the total revenue generated by each flight by summing up the fare amounts from the ticket_flights table.

SELECT 
  f.flight_id,
  f.flight_no,
  SUM(tf.amount) AS total_revenue
FROM ticket_flights tf
JOIN flights f ON tf.flight_id = f.flight_id
GROUP BY f.flight_id, f.flight_no
ORDER BY total_revenue DESC;

-- Question 4 
-- Objective: Examine boarding pass data to identify how passengers are being boarded by calculating the average boarding number per flight.

SELECT 
  flight_id, 
  AVG(boarding_no) AS avg_boarding_no,
  COUNT(ticket_no) AS total_boarding_passes
FROM boarding_passes
GROUP BY flight_id;

-- Question 5 (Marks: 7)
-- Objective: Identify seat occupancy by comparing the number of boarding passes (occupied seats) to the total seats available on an aircraft, and consider the fare conditions for those seats.
-- Determine Occupancy and Fare Conditions per Aircraft
-- Question Template: Display following columns flight_id, flight_no, aircraft_code, occupied_seats, occupancy_rate_percentage

SELECT 
    f.flight_id,
    f.flight_no,
    f.aircraft_code,
    COUNT(bp.ticket_no) AS occupied_seats,
    ROUND(COUNT(bp.ticket_no) / (SELECT COUNT(*) FROM seats s WHERE s.aircraft_code = f.aircraft_code) * 100, 2) AS occupancy_rate_percentage
FROM flights f
LEFT JOIN boarding_passes bp ON f.flight_id = bp.flight_id
GROUP BY f.flight_id, f.flight_no, f.aircraft_code;

-- Question 6 
-- Objective: Identify the three flights that generated the highest revenue based on ticket sales.

SELECT 
  f.flight_id,
  f.flight_no,
  SUM(tf.amount) AS total_revenue
FROM ticket_flights tf
JOIN flights f ON tf.flight_id = f.flight_id
GROUP BY f.flight_id, f.flight_no
ORDER BY total_revenue DESC
LIMIT 3;

-- Question 7
-- Objective: Determine the average flight duration for each aircraft model, allowing you to see how flight performance might vary between different models.

SELECT 
  a.model,
  AVG(TIMESTAMPDIFF(MINUTE, f.scheduled_departure, f.scheduled_arrival)) AS avg_duration_minutes
FROM flights f
JOIN aircrafts a ON f.aircraft_code = a.aircraft_code
GROUP BY a.model;

-- Question 8 
-- Objective: Count how many flights depart from each airport to assess airport activity levels.

SELECT 
  departure_airport, 
  COUNT(*) AS departure_flights
FROM flights
GROUP BY departure_airport;

-- Question 9 
-- Objective: Count how many flights depart from and arrive at each airport to assess airport activity levels.

SELECT 
  arrival_airport, 
  COUNT(*) AS arrival_flights
FROM flights
GROUP BY arrival_airport;

-- Question 10 
-- Objective: Analyze trends in bookings over time by grouping bookings by date, counting total bookings, and summing up the revenue.

SELECT 
  DATE(book_date) AS booking_date,
  COUNT(*) AS total_bookings,
  SUM(total_amount) AS total_revenue
FROM bookings
GROUP BY DATE(book_date)
ORDER BY booking_date;

-- Question 11 
-- Objective: Identify the most common routes by counting the number of flights for each departureâ€“arrival airport pair.

SELECT 
  departure_airport, 
  arrival_airport, 
  COUNT(*) AS flights_count
FROM flights
GROUP BY departure_airport, arrival_airport
ORDER BY flights_count DESC;

-- Question 12 (Marks: 3)etermine how many passengers boarded each flight by counting the boarding passes issued.

SELECT 
  flight_id, 
  COUNT(ticket_no) AS passengers_boarded
FROM boarding_passes
GROUP BY flight_id;

-- Question 13 
-- Objective: Assess the boarding process by calculating the average boarding order number for each flight, which may indicate the boarding strategy or sequence.

SELECT 
  flight_id, 
  Round(AVG(boarding_no),2) AS avg_boarding_no
FROM boarding_passes
GROUP BY flight_id;

-- Question 14 
-- Objective: Measure the seat occupancy rate for each flight by comparing the number of boarding passes issued with the total seats available on the aircraft.

SELECT 
    f.flight_id,
    f.flight_no,
    COUNT(bp.ticket_no) AS occupied_seats,
    ROUND(
      COUNT(bp.ticket_no) / (SELECT COUNT(*) FROM seats s WHERE s.aircraft_code = f.aircraft_code) * 100, 
      2
    ) AS occupancy_rate_percentage
FROM flights f
LEFT JOIN boarding_passes bp ON f.flight_id = bp.flight_id
GROUP BY f.flight_id, f.flight_no, f.aircraft_code
ORDER BY occupancy_rate_percentage DESC;

-- Question 15 
-- Objective: Aggregate the total amount spent by each passenger across all their tickets by joining the tickets and ticket_flights tables.

SELECT 
    t.passenger_id,
    COUNT(t.ticket_no) AS total_tickets,
    SUM(tf.amount) AS total_spent
FROM tickets t
JOIN ticket_flights tf ON t.ticket_no = tf.ticket_no
GROUP BY t.passenger_id
ORDER BY total_spent DESC;

